#!/usr/bin/env bpftrace

BEGIN
{
    printf("%-17s %-6s %-16s %-12s %-20s %-12s %s\n", "TIMESTAMP", "PID", "OFFSET", "COUNT (B)", "RET (B)", "LAT(ns)", "FILENAME");
}

tracepoint:syscalls:sys_enter_write,
tracepoint:syscalls:sys_enter_pwrite64
/ comm == "python3" /
{
    @start[tid] = nsecs;
    @count[tid] = args->count;
}

kprobe:vfs_write
/ @start[tid] /
{
    @filename[tid] = str(((struct file *)arg0)->f_path.dentry->d_name.name);
    @offset[tid]   = *arg3;
}

tracepoint:syscalls:sys_exit_write,
tracepoint:syscalls:sys_exit_pwrite64
/ @start[tid] /
{
    $now = nsecs;
    printf("%-17s %-6d %-16llu %-12lu %-20lu %-12lu %s\n", strftime("%H:%M:%S.%f", $now), pid, @offset[tid], @count[tid], args->ret, $now - @start[tid], @filename[tid]);

    delete(@start[tid]);
    delete(@filename[tid]);
    delete(@count[tid]);
    delete(@offset[tid]);
}

END
{
    delete(@start[tid]);
    delete(@filename[tid]);
    delete(@count[tid]);
    delete(@offset[tid]);
}